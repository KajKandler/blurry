"""
This type stub file was generated by pyright.
"""

import re
from .scanner import ScannerParser

PUNCTUATION = r'''\\!"#$%&'()*+,./:;<=>?@\[\]^`{}|_~-'''
ESCAPE = r'\\[' + PUNCTUATION + ']'
HTML_TAGNAME = r'[A-Za-z][A-Za-z0-9-]*'
HTML_ATTRIBUTES = r'(?:\s+[A-Za-z_:][A-Za-z0-9_.:-]*' r'(?:\s*=\s*(?:[^ "\'=<>`]+|\'[^\']*?\'|"[^\"]*?"))?)*'
ESCAPE_CHAR = re.compile(r'\\([' + PUNCTUATION + r'])')
LINK_TEXT = r'(?:\[[^\[\]]*\]|\\[\[\]]?|`[^`]*`|[^\[\]\\])*?'
LINK_LABEL = r'(?:[^\\\[\]]|' + ESCAPE + r'){0,1000}'
class InlineParser(ScannerParser):
    ESCAPE = ...
    AUTO_LINK = ...
    STD_LINK = ...
    REF_LINK = ...
    REF_LINK2 = ...
    ASTERISK_EMPHASIS = ...
    UNDERSCORE_EMPHASIS = ...
    CODESPAN = ...
    LINEBREAK = ...
    INLINE_HTML = ...
    RULE_NAMES = ...
    def __init__(self, renderer, hard_wrap=...) -> None:
        ...
    
    def parse_escape(self, m, state):
        ...
    
    def parse_auto_link(self, m, state):
        ...
    
    def parse_std_link(self, m, state):
        ...
    
    def parse_ref_link(self, m, state):
        ...
    
    def parse_ref_link2(self, m, state):
        ...
    
    def tokenize_link(self, line, link, text, title, state):
        ...
    
    def parse_asterisk_emphasis(self, m, state):
        ...
    
    def parse_underscore_emphasis(self, m, state):
        ...
    
    def tokenize_emphasis(self, m, state):
        ...
    
    def parse_codespan(self, m, state):
        ...
    
    def parse_linebreak(self, m, state):
        ...
    
    def parse_inline_html(self, m, state):
        ...
    
    def parse_text(self, text, state):
        ...
    
    def parse(self, s, state, rules=...):
        ...
    
    def render(self, s, state, rules=...):
        ...
    
    def __call__(self, s, state):
        ...
    


