"""
This type stub file was generated by pyright.
"""

import re

"""
    Directive Syntax
    ~~~~~~~~~~~~~~~~~

    This syntax is inspired by reStructuredText. The syntax is very powerful,
    that you can define a lot of custom features by your own.

    The syntax looks like::

        .. directive-name:: directive value
           :option-key: option value
           :option-key: option value

           full featured markdown text here

    :copyright: (c) Hsiaoming Yang
"""
DIRECTIVE_PATTERN = re.compile(r'\.\.( +)(?P<name>[a-zA-Z0-9_-]+)\:\: *(?P<value>[^\n]*)\n+' r'(?P<options>(?:  \1 {0,3}\:[a-zA-Z0-9_-]+\: *[^\n]*\n+)*)' r'(?P<text>(?:  \1 {0,3}[^\n]*\n+)*)')
class Directive(object):
    @staticmethod
    def parse_text(m):
        ...
    
    @staticmethod
    def parse_options(m):
        ...
    
    def register_directive(self, md, name):
        ...
    
    def parse(self, block, m, state):
        ...
    
    def __call__(self, md):
        ...
    


class PluginDirective(object):
    def __init__(self) -> None:
        ...
    
    def register_directive(self, name, fn):
        ...
    
    def parse_block_directive(self, block, m, state):
        ...
    
    def __call__(self, md):
        ...
    


